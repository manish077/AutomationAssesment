package com.qa.cucumber;
import static org.junit.Assert.assertEquals;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;

import com.qa.createUser;
import com.qa.manageUsers;
import com.qa.userCreationConstants;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;

import cucumber.api.PendingException;
import cucumber.api.java.After;
import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

import cucumber.api.java.After;
import cucumber.api.java.Before;

public class SetUp {
	public WebDriver driver = null;
	ExtentTest test;
	public static ExtentReports report;
	
	@Before
	public void setup() {
		System.setProperty("webdriver.chrome.driver", "C:\\\\Users\\\\Admin\\\\Desktop\\\\chromedriver.exe");
		driver = new ChromeDriver();
		report = new ExtentReports("C:\\Users\\Admin\\Desktop\\Friday\\Logs\\Cucumber.html", true);
	}
	
	@Given("^that you are on the create UserScreen$")
	public void that_you_are_on_the_create_UserScreen() throws Throwable {
		test = report.startTest("Start creating user");
		
		driver.get("http://localhost:8080/securityRealm/addUser");
	}

	@When("^the User details are entered on the Create UserScreen$")
	public void the_User_details_are_entered_on_the_Create_UserScreen() throws Throwable {
		
		manageUsers mUser = PageFactory.initElements(driver, manageUsers.class);
		createUser cUser = PageFactory.initElements(driver, createUser.class);
		
		driver.get(userCreationConstants.manage);

		mUser.username("admin");
		mUser.password("605d29828aae414b9d1d496acccedfa8");
		mUser.signIn();

		Thread.sleep(1000);
		mUser.goToUsers();

		Thread.sleep(1000);
		
		mUser.createUser();
	
		String Username = "test7";
		cUser.username(Username);
		test.log(LogStatus.INFO, "Enter Username");
		cUser.password1("test1");
		test.log(LogStatus.INFO, "Enter Password");
		cUser.password2("test1");
		test.log(LogStatus.INFO, "Confirm Password");
		cUser.fullname("Test Testy");
		test.log(LogStatus.INFO, "Enter Fullname");
		cUser.email("test@gmail.com");
		//test.log(LogStatus.INFO, "Enter Email");
		Thread.sleep(500);	
		
	}

	@When("^the details are submitted on the Create UserScreen$")
	public void the_details_are_submitted_on_the_Create_UserScreen() throws Throwable {
		createUser cUser = PageFactory.initElements(driver, createUser.class);
		test.log(LogStatus.INFO, "Click");
		
		cUser.createButton();
		
	}

	@Then("^the Username should be visible on the UsersScreen$")
	public void the_Username_should_be_visible_on_the_UsersScreen() throws Throwable {
		manageUsers mUser = PageFactory.initElements(driver, manageUsers.class);
		createUser cUser = PageFactory.initElements(driver, createUser.class);
		String Username = "test7";
	
		cUser.sortTable();
		test.log(LogStatus.INFO, "Sort Table");
		Thread.sleep(500);
		
	    if (cUser.users().getText().equals(Username)) {
	    	test.log(LogStatus.PASS, "User Has been sucessfully added.");
	    	
	    }
	    else {
	    	test.log(LogStatus.FAIL,"User had not been found");
	    }
	    
	    report.endTest(test);
		assertEquals(Username, cUser.users().getText());
		
	}

	@When("^the User details \"([^\"]*)\" username, \"([^\"]*)\" password, \"([^\"]*)\" confirm Password, and \"([^\"]*)\" Fullname are entered on the Create UserScreen$")
	public void the_User_details_username_password_confirm_Password_and_Fullname_are_entered_on_the_Create_UserScreen(String arg1, String arg2, String arg3, String arg4) throws Throwable {
		
		test = report.startTest("On to the Welcome Page");
		manageUsers mUser = PageFactory.initElements(driver, manageUsers.class);
		
		driver.get(userCreationConstants.manage);
		test.log(LogStatus.INFO, "Webpage opened");
		test.log(LogStatus.INFO, "Need to enter admin username and password");
		mUser.username("admin");
		mUser.password("605d29828aae414b9d1d496acccedfa8");
		mUser.signIn();
		test.log(LogStatus.INFO, "Signed In");
		test.log(LogStatus.INFO, "Manage Opened");
		Thread.sleep(1000);
		mUser.goToUsers();
		test.log(LogStatus.INFO, "User Mnagement");
		Thread.sleep(1000);
		
		mUser.createUser();
		test.log(LogStatus.INFO, "Enter User details");
		
		createUser cUser = PageFactory.initElements(driver, createUser.class);
		cUser.username(arg1);
		test.log(LogStatus.INFO, "Enter Username");
		cUser.password1(arg2);
		test.log(LogStatus.INFO, "Enter Password");
		cUser.password2(arg3);
		test.log(LogStatus.INFO, "Confirm Password");
		cUser.fullname(arg4);
		test.log(LogStatus.INFO, "Enter Fullname");
		cUser.email("test@gmail.com");
		test.log(LogStatus.INFO, "Enter Email");
		Thread.sleep(1000);
		test.log(LogStatus.INFO, "Details comfirmed");
		assertEquals(arg1, mUser.disUsername().getText());
		cUser.createButton();
	}

	@Then("^the \"([^\"]*)\" username should be visible on the UsersScreen$")
	public void the_username_should_be_visible_on_the_UsersScreen(String arg1) throws Throwable {
		createUser cUser = PageFactory.initElements(driver, createUser.class);
		cUser.sortTable();
		test.log(LogStatus.INFO, "Sort Table");
		Thread.sleep(500);
		
	    if (cUser.users().getText().equals(arg1)) {
	    	test.log(LogStatus.PASS, "User Has been sucessfully added.");
	    	
	    }
	    else {
	    	test.log(LogStatus.FAIL,"User had not been found");
	    }
	    
	    report.endTest(test);
		assertEquals(arg1, cUser.users().getText());
	
	}

	@Given("^the \"([^\"]*)\" username is visible on the UsersScreen$")
	public void the_username_is_visible_on_the_UsersScreen(String arg1) throws Throwable {
		driver.get(userCreationConstants.manage);
		manageUsers mUser = PageFactory.initElements(driver, manageUsers.class);
		createUser cUser = PageFactory.initElements(driver, createUser.class);
	//	test.log(LogStatus.INFO, "Webpage opened");
	//	test.log(LogStatus.INFO, "Need to enter admin username and password");
		mUser.username("admin");
		mUser.password("605d29828aae414b9d1d496acccedfa8");
		mUser.signIn();
	//	test.log(LogStatus.INFO, "Signed In");
	//	test.log(LogStatus.INFO, "Manage Opened");
		Thread.sleep(1000);
		mUser.goToUsers();
	//	test.log(LogStatus.INFO, "User Mnagement");
		Thread.sleep(1000);
		cUser.sortTable();
	}
//		
//
//	@When("^the \"([^\"]*)\" username is clicked on the UserScreen$")
//	public void the_username_is_clicked_on_the_UserScreen(String arg1) throws Throwable {
//		manageUsers mUser = PageFactory.initElements(driver, manageUsers.class);
//		 mUser.disUsername().click();
//		 assertEquals(arg1, mUser.disUsername().getText());
//	
//	}
//
//	@Then("^the User Profile should display the \"([^\"]*)\" username on the ProfileScreen$")
//	public void the_User_Profile_should_display_the_username_on_the_ProfileScreen(String arg1) throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
//
//	@Given("^the \"([^\"]*)\" Username's profile page has been loaded$")
//	public void the_Username_s_profile_page_has_been_loaded(String arg1) throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
//
//	@Given("^the configure button has been clicked on the profile page$")
//	public void the_configure_button_has_been_clicked_on_the_profile_page() throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
//
//	@When("^I change the old FullName on the Configure Page to a new FullName \"([^\"]*)\"$")
//	public void i_change_the_old_FullName_on_the_Configure_Page_to_a_new_FullName(String arg1) throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
//
//	@When("^I save the changes to the Configure Page$")
//	public void i_save_the_changes_to_the_Configure_Page() throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
//
//	@Then("^the Configure Page should show the NewFullName \"([^\"]*)\"$")
//	public void the_Configure_Page_should_show_the_NewFullName(String arg1) throws Throwable {
//	    // Write code here that turns the phrase above into concrete actions
//	    throw new PendingException();
//	}
	
	@After
	public void tearDown() {
		driver.quit();
		report.flush();
	}
	
	
	
	
}

